/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package edu.itsco;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INICIO = 4;
  /** RegularExpression Id. */
  int FIN = 5;
  /** RegularExpression Id. */
  int VAR = 6;
  /** RegularExpression Id. */
  int INT = 7;
  /** RegularExpression Id. */
  int STRING = 8;
  /** RegularExpression Id. */
  int FLOAT = 9;
  /** RegularExpression Id. */
  int PRINT = 10;
  /** RegularExpression Id. */
  int INPUT = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ENTONCES = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int IN = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int DO = 18;
  /** RegularExpression Id. */
  int SUM = 19;
  /** RegularExpression Id. */
  int REST = 20;
  /** RegularExpression Id. */
  int MULT = 21;
  /** RegularExpression Id. */
  int DIV = 22;
  /** RegularExpression Id. */
  int MOD = 23;
  /** RegularExpression Id. */
  int POT = 24;
  /** RegularExpression Id. */
  int IGUAL = 25;
  /** RegularExpression Id. */
  int MAYOR = 26;
  /** RegularExpression Id. */
  int MENOR = 27;
  /** RegularExpression Id. */
  int AND = 28;
  /** RegularExpression Id. */
  int OR = 29;
  /** RegularExpression Id. */
  int NOT = 30;
  /** RegularExpression Id. */
  int AP = 31;
  /** RegularExpression Id. */
  int CP = 32;
  /** RegularExpression Id. */
  int AC = 33;
  /** RegularExpression Id. */
  int CC = 34;
  /** RegularExpression Id. */
  int digito = 35;
  /** RegularExpression Id. */
  int letra = 36;
  /** RegularExpression Id. */
  int VALOR_INT = 37;
  /** RegularExpression Id. */
  int VALOR_FLOAT = 38;
  /** RegularExpression Id. */
  int VALOR_STRING = 39;
  /** RegularExpression Id. */
  int ID = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"program\"",
    "\"end\"",
    "\"var\"",
    "\"int\"",
    "\"string\"",
    "\"float\"",
    "\"print\"",
    "\"input\"",
    "\"if\"",
    "\":\"",
    "\"else\"",
    "\"for\"",
    "\"in\"",
    "\"while\"",
    "\"do\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<digito>",
    "<letra>",
    "<VALOR_INT>",
    "<VALOR_FLOAT>",
    "<VALOR_STRING>",
    "<ID>",
  };

}
